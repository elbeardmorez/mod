From f4614095bf63029b1b21b7dec78adb383465b577 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Sat, 27 Jan 2018 14:45:15 +0000
Subject: refactor outputs info printing

-add '-outputs' options
-rename 'outputs_list' -> 'outputs_set'
---
 src/hsetroot.c | 24 ++++++++++++++++++++++--
 src/outputs.c  | 12 ++++++++++--
 src/outputs.h  |  4 +++-
 3 files changed, 35 insertions(+), 5 deletions(-)

diff --git a/src/hsetroot.c b/src/hsetroot.c
index 7792748..59357b0 100644
--- a/src/hsetroot.c
+++ b/src/hsetroot.c
@@ -21,6 +21,7 @@ usage(char *commandline)
     "Generic Options:\n"
     " -help                      This help information\n"
     " -screens <int>             Set a screenmask to use\n"
+    " -outputs                   List screen outputs detected via xrandr\n"
     "\n"
     "Gradients:\n"
     " -add <color>               Add color to range using distance 1\n"
@@ -196,7 +197,6 @@ load_image(ImageMode mode, const char *arg, int alpha, Imlib_Image rootimg, Outp
 
   for (int i = 0; i < noutputs; i++) {
     OutputInfo o = outputs[i];
-    printf("output %d: size(%d, %d) pos(%d, %d)\n", i, o.w, o.h, o.x, o.y);
 
     if (mode == Fill) {
       imlib_blend_image_onto_image(buffer, 0, 0, 0, imgW, imgH, o.x, o.y, o.w, o.h);
@@ -310,6 +310,26 @@ main(int argc, char **argv)
 
     display = XOpenDisplay(NULL);
 
+    // global options
+    int processed = 0;
+    for (i = 1; i < argc; i++) {
+      if (strcmp(argv[i], "-outputs") == 0) {
+        processed = 1;
+
+        int noutputs = 0;
+        OutputInfo *outputs = outputs_set(&noutputs);
+        for (int i = 0; i < noutputs; i++) {
+          outputs_print(outputs[i]);
+        }
+        outputs_free(outputs);
+
+        break;
+      }
+    }
+
+    if (processed == 1)
+      continue;
+
     context = imlib_context_new();
     imlib_context_push(context);
 
@@ -339,7 +359,7 @@ main(int argc, char **argv)
     alpha = 255;
 
     int noutputs = 0;
-    OutputInfo *outputs = outputs_list(&noutputs);
+    OutputInfo *outputs = outputs_set(&noutputs);
 
     for (i = 1; i < argc; i++) {
       if (modifier != NULL) {
diff --git a/src/outputs.c b/src/outputs.c
index 08aae85..5d8b7e0 100644
--- a/src/outputs.c
+++ b/src/outputs.c
@@ -9,7 +9,7 @@
 
 
 OutputInfo
-*outputs_list(int *count_out)
+*outputs_set(int *count_out)
 {
   OutputInfo *outputs = NULL;
   int noutputs = 0;
@@ -51,7 +51,9 @@ OutputInfo
 
           state = 1;
           outputs = realloc(outputs, ++noutputs * sizeof(OutputInfo));
-          // pass
+
+          outputs[noutputs - 1].idx = noutputs - 1;
+          // pass:
 
 #define STATE(INIT, FIELD, END) \
         case INIT:\
@@ -84,6 +86,12 @@ OutputInfo
   return outputs;
 }
 
+void
+outputs_print(OutputInfo o)
+{
+  printf("output %d: size: %dx%d) pos: +%d +%d\n", o.idx, o.w, o.h, o.x, o.y);
+}
+
 void
 outputs_free(OutputInfo *outputs)
 {
diff --git a/src/outputs.h b/src/outputs.h
index dc10308..8568e50 100644
--- a/src/outputs.h
+++ b/src/outputs.h
@@ -2,11 +2,13 @@
 #define __OUTPUTS_H__
 
 typedef struct {
+  int idx;
   int w, h;
   int x, y;
 } OutputInfo;
 
-OutputInfo *outputs_list(int *count_out);
+OutputInfo *outputs_set(int *count_out);
+void outputs_print(OutputInfo);
 void outputs_free(OutputInfo *);
 
 #endif	// __OUTPUTS_H__
-- 
2.14.1

