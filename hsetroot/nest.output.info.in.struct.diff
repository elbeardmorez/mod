From bd92a2d70044cf5b0e20b83374d6e992f134dc43 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Sat, 27 Jan 2018 19:45:28 +0000
Subject: nest output info in struct

-nest info struct inside a struct to hold array count
-refactor infos initialisation
---
 src/hsetroot.c | 33 +++++++++++++++------------------
 src/outputs.c  | 33 ++++++++++++++++-----------------
 src/outputs.h  |  9 +++++++--
 3 files changed, 38 insertions(+), 37 deletions(-)

diff --git a/src/hsetroot.c b/src/hsetroot.c
index 59357b0..88eee21 100644
--- a/src/hsetroot.c
+++ b/src/hsetroot.c
@@ -316,12 +316,12 @@ main(int argc, char **argv)
       if (strcmp(argv[i], "-outputs") == 0) {
         processed = 1;
 
-        int noutputs = 0;
-        OutputInfo *outputs = outputs_set(&noutputs);
-        for (int i = 0; i < noutputs; i++) {
-          outputs_print(outputs[i]);
+        Outputs outputs;
+        outputs_set(&outputs);
+        for (int i = 0; i < outputs.noutputs; i++) {
+          outputs_print(outputs.infos[i]);
         }
-        outputs_free(outputs);
+        outputs_free(&outputs);
 
         break;
       }
@@ -358,8 +358,8 @@ main(int argc, char **argv)
 
     alpha = 255;
 
-    int noutputs = 0;
-    OutputInfo *outputs = outputs_set(&noutputs);
+    Outputs outputs;
+    outputs_set(&outputs);
 
     for (i = 1; i < argc; i++) {
       if (modifier != NULL) {
@@ -442,7 +442,7 @@ main(int argc, char **argv)
           fprintf(stderr, "Missing image\n");
           continue;
         }
-        if (load_image(Fill, argv[i], alpha, image, outputs, noutputs) == 0) {
+        if (load_image(Fill, argv[i], alpha, image, outputs.infos, outputs.noutputs) == 0) {
           fprintf(stderr, "Bad image (%s)\n", argv[i]);
           continue;
         }
@@ -451,7 +451,7 @@ main(int argc, char **argv)
           fprintf(stderr, "Missing image\n");
           continue;
         }
-        if (load_image(Full, argv[i], alpha, image, outputs, noutputs) == 0) {
+        if (load_image(Full, argv[i], alpha, image, outputs.infos, outputs.noutputs) == 0) {
           fprintf(stderr, "Bad image (%s)\n", argv[i]);
           continue;
         }
@@ -460,7 +460,7 @@ main(int argc, char **argv)
           fprintf(stderr, "Missing image\n");
           continue;
         }
-        if (load_image(Xtend, argv[i], alpha, image, outputs, noutputs) == 0) {
+        if (load_image(Xtend, argv[i], alpha, image, outputs.infos, outputs.noutputs) == 0) {
           fprintf(stderr, "Bad image (%s)\n", argv[i]);
           continue;
         }
@@ -469,7 +469,7 @@ main(int argc, char **argv)
           fprintf(stderr, "Missing image\n");
           continue;
         }
-        if (load_image(Tile, argv[i], alpha, image, outputs, noutputs) == 0) {
+        if (load_image(Tile, argv[i], alpha, image, outputs.infos, outputs.noutputs) == 0) {
           fprintf(stderr, "Bad image (%s)\n", argv[i]);
           continue;
         }
@@ -478,7 +478,7 @@ main(int argc, char **argv)
           fprintf(stderr, "Missing image\n");
           continue;
         }
-        if (load_image(Center, argv[i], alpha, image, outputs, noutputs) == 0) {
+        if (load_image(Center, argv[i], alpha, image, outputs.infos, outputs.noutputs) == 0) {
           fprintf (stderr, "Bad image (%s)\n", argv[i]);
           continue;
         }
@@ -487,7 +487,7 @@ main(int argc, char **argv)
           fprintf(stderr, "Missing image\n");
           continue;
         }
-        if (load_image(Cover, argv[i], alpha, image, outputs, noutputs) == 0) {
+        if (load_image(Cover, argv[i], alpha, image, outputs.infos, outputs.noutputs) == 0) {
           fprintf (stderr, "Bad image (%s)\n", argv[i]);
           continue;
         }
@@ -599,11 +599,8 @@ main(int argc, char **argv)
       }
     }
 
-    if (outputs != NULL) {
-      outputs_free(outputs);
-      outputs = NULL;
-      noutputs = 0;
-    }
+    if (outputs.infos != NULL)
+      outputs_free(&outputs);
 
     if (modifier != NULL) {
       imlib_context_set_color_modifier(modifier);
diff --git a/src/outputs.c b/src/outputs.c
index c50f31f..f9f617a 100644
--- a/src/outputs.c
+++ b/src/outputs.c
@@ -7,23 +7,22 @@
 
 #include "outputs.h"
 
-
-OutputInfo
-*outputs_set(int *count_out)
+void
+outputs_set(Outputs* outputs)
 {
-  OutputInfo *outputs = NULL;
+  OutputInfo *infos = NULL;
   int noutputs = 0;
 
   int pipefd[2];
   if (pipe(pipefd) == -1) {
     perror("pipe");
-    return NULL;
+    return;
   }
 
   pid_t pid = fork();
   if (pid == -1) {
     perror("fork");
-    return NULL;
+    return;
   }
 
   if (pid == 0) {
@@ -53,9 +52,9 @@ OutputInfo
             break;
 
           state = 1;
-          outputs = realloc(outputs, ++noutputs * sizeof(OutputInfo));
+          infos = realloc(infos, ++noutputs * sizeof(OutputInfo));
 
-          outputs[noutputs - 1].idx = noutputs - 1;
+          infos[noutputs - 1].idx = noutputs - 1;
           name = malloc(sizeof(char) * 256);
           name_len = 0;
           // pass:
@@ -63,7 +62,7 @@ OutputInfo
         case 1: // read name
           if (isspace(buf) != 0) {
             name[name_len] = '\0';
-            outputs[noutputs - 1].name = name;
+            infos[noutputs - 1].name = name;
             state = 2;
             continue;
           }
@@ -75,7 +74,7 @@ OutputInfo
 #define STATE(CASE, FIELD, NEXT_CASE) \
         case CASE:\
           if (isdigit(buf) == 0) {\
-            outputs[noutputs - 1].FIELD = num;\
+            infos[noutputs - 1].FIELD = num;\
             \
             state = NEXT_CASE;\
             num = 0;\
@@ -99,8 +98,8 @@ OutputInfo
     close(pipefd[0]);
   }
 
-  *count_out = noutputs;
-  return outputs;
+  outputs->noutputs = noutputs;
+  outputs->infos = infos;
 }
 
 void
@@ -110,13 +109,13 @@ outputs_print(OutputInfo o)
 }
 
 void
-outputs_free(OutputInfo *outputs)
+outputs_free(Outputs* outputs)
 {
   if (outputs) {
-    int noutputs = sizeof(&outputs) / sizeof(OutputInfo);
-    for (int i = 0; i < noutputs; i++) {
-      free(outputs[i].name);
+    for (int i = 0; i < outputs->noutputs; i++) {
+      free(outputs->infos[i].name);
     }
-    free(outputs);
+    free(outputs->infos);
+    outputs->infos = NULL;
   }
 }
diff --git a/src/outputs.h b/src/outputs.h
index 7ac9d13..36bb8c4 100644
--- a/src/outputs.h
+++ b/src/outputs.h
@@ -8,8 +8,13 @@ typedef struct {
   int x, y;
 } OutputInfo;
 
-OutputInfo *outputs_set(int *count_out);
+typedef struct {
+  int noutputs;
+  OutputInfo* infos;
+} Outputs;
+
+void outputs_set(Outputs*);
 void outputs_print(OutputInfo);
-void outputs_free(OutputInfo *);
+void outputs_free(Outputs*);
 
 #endif	// __OUTPUTS_H__
-- 
2.14.1

