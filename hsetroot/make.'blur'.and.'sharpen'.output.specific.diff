From f3acae08282368b6472f9388d27a26843ad30230 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Sat, 3 Feb 2018 18:11:12 +0000
Subject: make 'blur' and 'sharpen' output specific

-commit serves as a template for switching options from
'global only' to 'output specific' support mode
---
 src/hsetroot.c | 52 +++++++++++++++++++++++++++++-----------------------
 src/options.c  |  2 ++
 src/options.h  |  4 ++++
 3 files changed, 35 insertions(+), 23 deletions(-)

diff --git a/src/hsetroot.c b/src/hsetroot.c
index c28d6e4..425089e 100644
--- a/src/hsetroot.c
+++ b/src/hsetroot.c
@@ -24,7 +24,7 @@ usage(char *commandline)
     " -outputs                   List screen outputs detected via xrandr\n"
     " -output <name>             Apply to xrandr output 'name' only*\n"
     "\n"
-    "*supports: images [all], solid, manipulation [alpha]\n"
+    "*supports: images [all], solid, manipulation [alpha, blur, sharpen]\n"
     "\n"
     "Gradients:\n"
     " -add <color>               Add color to range using distance 1\n"
@@ -215,6 +215,12 @@ overlay_effects(Imlib_Image root_image, Options *options)
       imlib_free_color_modifier();
     }
 
+    if (options->set_blur)
+      imlib_image_blur(options->blur_level);
+
+    if (options->set_sharpen)
+      imlib_image_sharpen(options->sharpen_level);
+
     if (options->effects_mode == Output) {
       // overlay modified buffer to root
       imlib_context_set_image(root_image);
@@ -547,6 +553,28 @@ main(int argc, char **argv)
         }
         options.set_alpha = 1;
         options_set = 1;
+      } else if (strcmp(argv[i], "-blur") == 0) {
+        if ((++i) >= argc) {
+          fprintf(stderr, "Missing blur value\n");
+          continue;
+        }
+        if (!sscanf(argv[i], "%i", &options.blur_level)) {
+          fprintf(stderr, "Bad blur value (%s)\n", argv[i]);
+          continue;
+        }
+        options.set_blur = 1;
+        options_set = 1;
+      } else if (strcmp(argv[i], "-sharpen") == 0) {
+        if ((++i) >= argc) {
+          fprintf(stderr, "Missing sharpen value\n");
+          continue;
+        }
+        if (!sscanf(argv[i], "%i", &options.sharpen_level)) {
+          fprintf(stderr, "Bad sharpen value (%s)\n", argv[i]);
+          continue;
+        }
+        options.set_sharpen = 1;
+        options_set = 1;
 
       ////////////////////
       // global only options
@@ -636,28 +664,6 @@ main(int argc, char **argv)
           }
 
           imlib_set_color_modifier_tables(r, g, b, a);
-        } else if (strcmp(argv[i], "-blur") == 0) {
-          int intval;
-          if ((++i) >= argc) {
-            fprintf(stderr, "Missing value\n");
-            continue;
-          }
-          if (!sscanf(argv[i], "%i", &intval)) {
-            fprintf(stderr, "Bad value (%s)\n", argv[i]);
-            continue;
-          }
-          imlib_image_blur(intval);
-        } else if (strcmp(argv[i], "-sharpen") == 0) {
-          int intval;
-          if ((++i) >= argc) {
-            fprintf(stderr, "Missing value\n");
-            continue;
-          }
-          if (!sscanf(argv[i], "%i", &intval)) {
-            fprintf(stderr, "Bad value (%s)\n", argv[i]);
-            continue;
-          }
-          imlib_image_sharpen(intval);
         } else if (strcmp(argv[i], "-contrast") == 0) {
           double dblval;
           if ((++i) >= argc) {
diff --git a/src/options.c b/src/options.c
index e6a74b3..e34822d 100644
--- a/src/options.c
+++ b/src/options.c
@@ -16,4 +16,6 @@ options_default(Options* options)
   options->alpha_level = DEFAULT_ALPHA_LEVEL;
   options->set_solid = false;
   options->set_alpha = false;
+  options->set_blur = false;
+  options->set_sharpen = false;
 }
diff --git a/src/options.h b/src/options.h
index 3877c37..9c051dc 100644
--- a/src/options.h
+++ b/src/options.h
@@ -19,9 +19,13 @@ typedef struct {
   const char *image_mode_arg;
   char *solid_colour;
   int alpha_level;
+  int blur_level;
+  int sharpen_level;
   // option switches
   bool set_solid;
   bool set_alpha;
+  bool set_blur;
+  bool set_sharpen;
 } Options;
 
 void options_default(Options*);
-- 
2.14.1

