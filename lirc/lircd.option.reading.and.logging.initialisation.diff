From a473f81ab5a9518c664c641e527578f42b366a63 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Thu, 7 Aug 2014 15:21:38 +0100
Subject: lircd option reading and logging initialisation

-rework initialisation to cope with user log file option
-improve debug option wording
---
 daemons/lircd.c | 47 ++++++++++++++++++++++++++---------------------
 1 file changed, 26 insertions(+), 21 deletions(-)

diff --git a/daemons/lircd.c b/daemons/lircd.c
index b64ace4..682405d 100644
--- a/daemons/lircd.c
+++ b/daemons/lircd.c
@@ -378,7 +378,7 @@ void dosigterm(int sig)
 
 	signal(SIGALRM, SIG_IGN);
 	logprintf(LOG_NOTICE, "caught signal");
-
+	lirc_log_close();
 	if (free_remotes != NULL) {
 		free_config(free_remotes);
 	}
@@ -2158,8 +2158,8 @@ static void lircd_help(void)
 	printf("\t -c --connect=host[:port]\tconnect to remote lircd server\n");
 	printf("\t -o --output=socket\t\toutput socket filename\n");
 	printf("\t -P --pidfile=file\t\tdaemon pid file\n");
-	printf("\t -L --logfile=file\t\tLog file path or 'syslog'\n");
-	printf("\t -D[debug_level] --debug[=debug_level]\n");
+	printf("\t -L --logfile=file\t\tlog file path or 'syslog'\n");
+	printf("\t -D[X] --debug[=X]\t\tenable log, optional verbosity level 1..10\n");
 	printf("\t -r --release[=suffix]\t\tauto-generate release events\n");
 	printf("\t -a --allow-simulate\t\taccept SIMULATE command\n");
 #       if defined(__linux__)
@@ -2196,19 +2196,16 @@ static void lircd_add_defaults(void)
 
 static void lircd_parse_options(int argc, char** argv)
 {
-	int c;
+	strncpy(progname, "lircd", sizeof(progname));
 	const char* optstring =  "O:hvnp:H:d:o:U:P:l::L:c:r::aR:D::"
 #       if defined(__linux__)
 		"u"
 #       endif
 	;
-
-	strncpy(progname, "lircd", sizeof(progname));
 	optind = 1;
-	lircd_add_defaults();
+	int c;
 	while ((c = getopt_long(argc, argv, optstring, lircd_options, NULL))
-		!= -1 )
-	{
+		!= -1) {
 		switch (c) {
 		case 'h':
 			lircd_help();
@@ -2249,7 +2246,6 @@ static void lircd_parse_options(int argc, char** argv)
 			break;
 		case 'D':
 			options_set_opt("lircd:debug", optarg ? optarg : "1");
-			debug_opt = 1;
 			break;
 		case 'a':
 			options_set_opt("lircd:allow-simulate", "True");
@@ -2275,10 +2271,10 @@ static void lircd_parse_options(int argc, char** argv)
 			exit(EXIT_FAILURE);
 		}
 	}
-	if (optind == argc - 1) {
-		options_set_opt("lircd:configfile", argv[optind]);
-	} else if (optind != argc) {
-		fprintf(stderr, "%s: invalid argument count\n", progname);
+	if (optind == argc - 1)
+		options_set_opt("lircd:configfile", optind == argc - 1 ? argv[argc - 1] : NULL);
+	else if (optind < argc - 1) {
+		fprintf(stderr, "%s: too many unprocessed arguments\n", progname);
 		exit(EXIT_FAILURE);
 	}
 }
@@ -2294,14 +2290,23 @@ int main(int argc, char **argv)
 
 	address.s_addr = htonl(INADDR_ANY);
 	hw_choose_driver(NULL);
-	options_load(argc, argv, NULL, lircd_parse_options);
-#       ifndef USE_SYSLOG
-        opt = options_getstring("lircd:logfile");
-        if (opt != NULL)
-                lirc_set_logfile(opt);
-#       endif
-        lirc_log_open("lircd", 0, LOG_INFO);
 
+	/* set default options */
+	lircd_add_defaults();
+	/* set up default logging */
+	/* catch 'pre-log' messages in LOGFILE*/
+	lirc_set_logfile(options_getstring("lircd:logfile"));
+	lirc_log_open("lircd", 0, LOG_INFO);
+	/* set command line and file options */
+	options_load(argc, argv, NULL, lircd_parse_options);
+	if (strcmp(lirc_get_logfile(), options_getstring("lircd:logfile")) != 0) {
+		/* update log file location */
+		lirc_log_close();
+		lirc_set_logfile(options_getstring("lircd:logfile"));
+		lirc_log_open("lircd", 0, LOG_INFO);
+	}
+	/* update log level */
+	lirc_log_setlevel(options_getstring("lircd:debug"));
 	nodaemon = options_getboolean("lircd:nodaemon");
 	opt = options_getstring("lircd:permission");
 	if (oatoi(opt) == -1) {
-- 
1.8.4

