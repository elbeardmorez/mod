From b4d2e9e58af2c7e4f87b187dad40cc6f5e98d82d Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Sat, 10 Feb 2018 08:33:07 +0000
Subject: prefer comprehensions over maps

---
 quodlibet/quodlibet/formats/_audio.py | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/quodlibet/quodlibet/formats/_audio.py b/quodlibet/quodlibet/formats/_audio.py
index 1c89beac1..32147cdbc 100644
--- a/quodlibet/quodlibet/formats/_audio.py
+++ b/quodlibet/quodlibet/formats/_audio.py
@@ -546,8 +546,8 @@ class AudioFile(dict, ImageContainer):
         from quodlibet.pattern import ArbitraryExtensionFileFromPattern
 
         def sanitise(sep, parts):
-            return sep.join(list(map(lambda s: s.replace(u'/', u'')[:128],
-                                     parts)))
+            return sep.join(part.replace(u'/', u'')[:128]
+                                for part in parts)
 
         # setup defaults (user-defined take precedence)
         # root search paths
@@ -628,9 +628,8 @@ class AudioFile(dict, ImageContainer):
                 extra_extensions = [x for x in lyric_extensions if x != ext]
 
                 # join valid new extensions to pathfile stub and return
-                return list(map(lambda ext: '.'.join([path, ext])
-                                                if ext else path,
-                                      extra_extensions))
+                return ['.'.join([path, ext]) if ext else path
+                           for ext in extra_extensions]
 
             # look for a match by modifying the extension for each of the
             # (now fully resolved) 'pathfiles_expanded' search items
-- 
2.14.1

