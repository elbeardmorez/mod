From a721fbb38fcee0a46cf9e4fa56bc13296b659b8b Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Mon, 31 Jul 2017 19:46:22 +0100
Subject: move album art when renaming [#237]

---
 quodlibet/quodlibet/config.py           |   3 +
 quodlibet/quodlibet/qltk/renamefiles.py | 103 +++++++++++++++++++++++++++++++-
 2 files changed, 103 insertions(+), 3 deletions(-)

diff --git a/quodlibet/quodlibet/config.py b/quodlibet/quodlibet/config.py
index bf15288..27ce4b3 100644
--- a/quodlibet/quodlibet/config.py
+++ b/quodlibet/quodlibet/config.py
@@ -215,6 +215,8 @@ INITIAL = {
         "spaces": "false",
         "windows": "true",
         "ascii": "false",
+        "moveart": "false",
+        "moveart_overwrite": "false",
     },
 
     "tagsfrompath": {
@@ -257,6 +259,7 @@ INITIAL = {
         "prefer_embedded": "false",
         "force_filename": "false",
         "filename": "folder.jpg",
+        "filenames": "cover.jpg,folder.jpg,.folder.jpg",
     },
 
     "display": {
diff --git a/quodlibet/quodlibet/qltk/renamefiles.py b/quodlibet/quodlibet/qltk/renamefiles.py
index c1c02a1..b052702 100644
--- a/quodlibet/quodlibet/qltk/renamefiles.py
+++ b/quodlibet/quodlibet/qltk/renamefiles.py
@@ -7,6 +7,8 @@
 
 import os
 import unicodedata
+import glob
+import shutil
 
 from gi.repository import Gtk, Gdk
 from senf import fsn2text, text2fsn
@@ -14,19 +16,23 @@ from senf import fsn2text, text2fsn
 import quodlibet
 from quodlibet import qltk
 from quodlibet import util
+from quodlibet import config
 from quodlibet import _
 
 from quodlibet.plugins import PluginManager
 from quodlibet.pattern import FileFromPattern
+from quodlibet.pattern import ArbitraryExtensionFileFromPattern
 from quodlibet.qltk._editutils import FilterPluginBox, FilterCheckButton
 from quodlibet.qltk._editutils import EditingPluginHandler
 from quodlibet.qltk.views import TreeViewColumn
 from quodlibet.qltk.cbes import ComboBoxEntrySave
+from quodlibet.qltk.ccb import ConfigCheckButton
 from quodlibet.qltk.models import ObjectStore
 from quodlibet.qltk import Icons, Button
 from quodlibet.qltk.wlw import WritingWindow
 from quodlibet.util import connect_obj, gdecode
 from quodlibet.util.path import strip_win32_incompat_from_path
+from quodlibet.util.dprint import print_d
 from quodlibet.compat import itervalues
 
 
@@ -124,6 +130,7 @@ class RenameFiles(Gtk.VBox):
     FILTERS = [SpacesToUnderscores, StripWindowsIncompat, StripDiacriticals,
                StripNonASCII, Lowercase]
     handler = RenameFilesPluginHandler()
+    IMAGE_EXTENSIONS = ['jpg', 'jpeg', 'png', 'bmp']
 
     @classmethod
     def init_plugins(cls):
@@ -164,6 +171,22 @@ class RenameFiles(Gtk.VBox):
         self.filter_box = filter_box
         self.pack_start(filter_box, False, True, 0)
 
+        # move art
+        moveart_box = Gtk.VBox()
+        self.moveart = ConfigCheckButton(
+             _('_Move album art'),
+             "rename", "moveart", populate=True)
+        self.moveart.set_tooltip_text(
+             _("See '[albumart] filenames' config entry for image search strings."))
+        self.moveart.show()
+        moveart_box.pack_start(self.moveart, False, True, 0)
+        self.moveart_overwrite = ConfigCheckButton(
+             _('_Overwrite album art at target'),
+             "rename", "moveart_overwrite", populate=True)
+        self.moveart_overwrite.show()
+        moveart_box.pack_start(self.moveart_overwrite, False, True, 0)
+        self.pack_start(moveart_box, False, True, 0)
+
         # Save button
         self.save = Button(_("_Save"), Icons.DOCUMENT_SAVE)
         self.save.show()
@@ -236,13 +259,20 @@ class RenameFiles(Gtk.VBox):
         was_changed = set()
         skip_all = False
         self.view.freeze_child_notify()
+        moveart = config.getboolean("rename", "moveart")
+        moveart_sets = {}
 
         for entry in itervalues(model):
+            if entry.new_name is None:
+                continue
             song = entry.song
-            new_name = entry.new_name
             old_name = entry.name
-            if new_name is None:
-                continue
+            old_pathfile = song['~filename']
+            new_name = entry.new_name
+            new_pathfile = new_name if (
+                os.path.abspath(os.path.join(os.getcwd(), new_name)) !=
+                os.path.abspath(new_name)) else (
+                os.path.join(os.path.dirname(old_pathfile), new_name))
 
             try:
                 library.rename(song, text2fsn(new_name), changed=was_changed)
@@ -274,6 +304,10 @@ class RenameFiles(Gtk.VBox):
                 library.reload(song, changed=was_changed)
                 if resp != Gtk.ResponseType.OK and resp != RESPONSE_SKIP_ALL:
                     break
+
+            if moveart:
+                self.__moveart(moveart_sets, old_pathfile, new_name, song)
+
             if win.step():
                 break
 
@@ -282,6 +316,69 @@ class RenameFiles(Gtk.VBox):
         library.changed(was_changed)
         self.save.set_sensitive(False)
 
+    def __moveart(self, art_sets, pathfile_old, pathfile_new, song):
+
+        path_old = os.path.dirname(os.path.realpath(pathfile_old))
+        path_new = os.path.dirname(os.path.realpath(pathfile_new))
+        if os.path.samefile(path_old, path_new):
+            return
+        if (path_old in art_sets.keys() and len(art_sets[path_old]) == 0):
+            return
+
+        # get art set for path
+        images = []
+        if path_old in art_sets.keys():
+            images = art_sets[path_old]
+        else:
+            art_sets[path_old] = images
+            # generate art set for path
+            for suffix in self.IMAGE_EXTENSIONS:
+                images.extend(glob.glob(os.path.join(path_old, "*." + suffix)))
+        if len(images) > 0:
+            # set not empty yet, (re)process
+            filenames = config.getstringlist("albumart", "filenames")
+            moves = [];
+            for fn in filenames:
+                fn = os.path.join(path_old, fn);
+                if "<" in fn:
+                    # resolve path
+                    fnres = ArbitraryExtensionFileFromPattern(fn).format(song)
+                    if fnres in images and fnres not in moves:
+                        moves.append(fnres)
+                elif "*" in fn:
+                    moves.extend(f for f in glob.glob(fn)
+                                     if f in images and f not in moves)
+                elif fn in images and fn not in moves:
+                    moves.append(fn)
+            if len(moves) > 0:
+                overwrite = config.getboolean("rename", "moveart_overwrite")
+                for fnmove in moves:
+                    try:
+                        # existing files safeguarded until move successful,
+                        # then deleted if overwrite set
+                        fnmoveto = os.path.join(path_new,
+                                                os.path.split(fnmove)[1])
+                        fnmoveto_orig = ""
+                        if os.path.exists(fnmoveto):
+                            fnmoveto_orig = fnmoveto + ".orig"
+                            if not os.path.exists(fnmoveto_orig):
+                                os.rename(fnmoveto, fnmoveto_orig)
+                            else:
+                                suffix = 1
+                                while os.path.exists(fnmoveto_orig +
+                                                     "." + str(suffix)):
+                                    suffix+=1
+                                fnmoveto_orig = (fnmoveto_orig +
+                                                 "." + str(suffix))
+                                os.rename(fnmoveto, fnmoveto_orig)
+                        print_d("Renaming image %r to %r" % (fnmove, fnmoveto), self)
+                        shutil.move(fnmove, fnmoveto)
+                        if overwrite and fnmoveto_orig:
+                            os.remove(fnmoveto_orig);
+                        images.remove(fnmove)
+                    except Exception:
+                        util.print_exc()
+
     def __preview(self, songs):
         model = self.view.get_model()
         if songs is None:
-- 
1.8.4

