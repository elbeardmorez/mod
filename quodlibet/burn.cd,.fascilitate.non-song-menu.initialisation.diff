From 0a755cee35894155ab5c49ef7339be1aeb299c17 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Fri, 25 Aug 2017 09:41:49 +0100
Subject: burn cd, fascilitate non-song-menu initialisation

---
 quodlibet/quodlibet/ext/songsmenu/k3b.py | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/quodlibet/quodlibet/ext/songsmenu/k3b.py b/quodlibet/quodlibet/ext/songsmenu/k3b.py
index 43a67ac..c737d81 100644
--- a/quodlibet/quodlibet/ext/songsmenu/k3b.py
+++ b/quodlibet/quodlibet/ext/songsmenu/k3b.py
@@ -16,6 +16,7 @@ from quodlibet.plugins.songshelpers import is_a_file, each_song
 from quodlibet.util.path import iscommand
 from quodlibet.qltk import Icons
 from quodlibet.util import connect_obj
+from quodlibet.util import print_d
 
 
 class BurnCD(SongsMenuPlugin):
@@ -54,10 +55,21 @@ class BurnCD(SongsMenuPlugin):
     def __set(self, name):
         self.prog_name = name
 
-    def plugin_songs(self, songs):
-        if self.prog_name is None:
+    def plugin_songs(self, songs, prog_name=None):
+
+        if not songs:
+            return
+
+        burn_program = self.prog_name
+        if not burn_program and prog_name:
+            burn_program = \
+                next((key for key in self.burn_programs.keys()
+                        if key.lower() == prog_name.lower()), None)
+
+        if not burn_program:
+            print_d("no burning program set")
             return
 
-        args, reverse = self.burn_programs[self.prog_name]
+        args, reverse = self.burn_programs[burn_program]
         songs = sorted(songs, key=lambda s: s.sort_key, reverse=reverse)
         util.spawn(args + [song['~filename'] for song in songs])
-- 
1.8.4

