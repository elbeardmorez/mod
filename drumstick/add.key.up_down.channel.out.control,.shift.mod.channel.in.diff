From 927d088a7a668b27872ed171cbf2b42a5bcb9ac7 Mon Sep 17 00:00:00 2001
From: Pete Beardmore <pete.beardmore@msn.com>
Date: Mon, 6 Feb 2017 09:32:11 +0000
Subject: add key up/down channel out control, shift mod channel in

---
 utils/vpiano/pianokeybd.cpp |  1 +
 utils/vpiano/pianokeybd.h   |  1 +
 utils/vpiano/pianoscene.cpp |  5 +++++
 utils/vpiano/pianoscene.h   |  1 +
 utils/vpiano/vpiano.cpp     | 12 ++++++++++++
 utils/vpiano/vpiano.h       |  1 +
 6 files changed, 21 insertions(+)

diff --git a/utils/vpiano/pianokeybd.cpp b/utils/vpiano/pianokeybd.cpp
index 4a87bb0..252e3a0 100644
--- a/utils/vpiano/pianokeybd.cpp
+++ b/utils/vpiano/pianokeybd.cpp
@@ -52,6 +52,7 @@ void PianoKeybd::initScene(int base, int num, int strt, qreal keysizescale, cons
     m_scene->setKeyboardMap(&m_defaultMap);
     connect(m_scene, SIGNAL(noteOn(int,int)), SIGNAL(noteOn(int,int)));
     connect(m_scene, SIGNAL(noteOff(int,int)), SIGNAL(noteOff(int,int)));
+    connect(m_scene, SIGNAL(channelChange(int,int)), SIGNAL(channelChange(int,int)));
     setScene(m_scene);
 }
 
diff --git a/utils/vpiano/pianokeybd.h b/utils/vpiano/pianokeybd.h
index 529e37f..0de7c8f 100644
--- a/utils/vpiano/pianokeybd.h
+++ b/utils/vpiano/pianokeybd.h
@@ -97,6 +97,7 @@ public:
 signals:
     void noteOn( int midiNote, int vel );
     void noteOff( int midiNote, int vel );
+    void channelChange(int inout, int direction);
 
 protected:
     void initialize();
diff --git a/utils/vpiano/pianoscene.cpp b/utils/vpiano/pianoscene.cpp
index 2ec9d6b..f234891 100644
--- a/utils/vpiano/pianoscene.cpp
+++ b/utils/vpiano/pianoscene.cpp
@@ -333,6 +333,11 @@ void PianoScene::keyPressEvent ( QKeyEvent * keyEvent )
             int note = getNoteFromKey(keyEvent->key());
             if (note > -1)
                 keyOn(note);
+            else if (keyEvent->key() == Qt::Key_Up ||
+                     keyEvent->key() == Qt::Key_Down) {
+                 emit channelChange(keyEvent->modifiers() & Qt::ShiftModifier ? 0 : 1,
+                                    keyEvent->key() == Qt::Key_Up ? 1 : -1);
+            }
         }
         keyEvent->accept();
         return;
diff --git a/utils/vpiano/pianoscene.h b/utils/vpiano/pianoscene.h
index 7cc84dc..b6fc259 100644
--- a/utils/vpiano/pianoscene.h
+++ b/utils/vpiano/pianoscene.h
@@ -110,6 +110,7 @@ public:
 signals:
     void noteOn(int n, int v);
     void noteOff(int n, int v);
+    void channelChange(int inout, int direction);
 
 protected:
     void showKeyOn( PianoKey* key, QColor color, int vel );
diff --git a/utils/vpiano/vpiano.cpp b/utils/vpiano/vpiano.cpp
index bfe475b..6a8f116 100644
--- a/utils/vpiano/vpiano.cpp
+++ b/utils/vpiano/vpiano.cpp
@@ -72,6 +72,7 @@ VPiano::VPiano( QWidget * parent, Qt::WindowFlags flags )
     connect(&dlgPreferences, SIGNAL(signalApply()), SLOT(slotPreferencesApply()));
     connect(ui.pianokeybd, SIGNAL(noteOn(int,int)), SLOT(slotNoteOn(int,int)));
     connect(ui.pianokeybd, SIGNAL(noteOff(int,int)), SLOT(slotNoteOff(int,int)));
+    connect(ui.pianokeybd, SIGNAL(channelChange(int,int)), SLOT(slotChannelChange(int,int)));
 
     dlgConnections.setInputs(inputs);
     dlgConnections.setOutputs(outputs);
@@ -137,6 +138,17 @@ void VPiano::slotNoteOff(const int chan, const int note, const int vel)
     }
 }
 
+void VPiano::slotChannelChange(const int inout, const int direction) {
+    switch (inout) {
+        case 0:
+           dlgPreferences.setInChannel((dlgPreferences.getInChannel() + direction + 16) % 16);
+           break;
+        case 1:
+           dlgPreferences.setOutChannel((dlgPreferences.getOutChannel() + direction + 16) % 16);
+           break;
+    }
+}
+
 void VPiano::slotAbout()
 {
     dlgAbout.exec();
diff --git a/utils/vpiano/vpiano.h b/utils/vpiano/vpiano.h
index 0de499b..ea72607 100644
--- a/utils/vpiano/vpiano.h
+++ b/utils/vpiano/vpiano.h
@@ -57,6 +57,7 @@ public slots:
     void slotNoteOn(const int chan, const int note, const int vel);
     void slotNoteOff(const int midiNote, const int vel);
     void slotNoteOff(const int chan, const int note, const int vel);
+    void slotChannelChange(const int inout, const int direction);
 
 private:
     MIDIInput * m_midiIn;
-- 
1.8.4

